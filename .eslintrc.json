{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "plugins": ["@typescript-eslint/eslint-plugin", "import"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 12,
        "project": "tsconfig.eslint.json",
        "sourceType": "module"
      },
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "class-methods-use-this": "off",
        "lines-between-class-members": ["error", "always"],
        "import/no-unresolved": "error",
        "import/order": [
          "warn",
          {
            "groups": ["external", "builtin", "internal", "parent", "sibling", "index"],
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript", "plugin:@typescript-eslint/recommended"],
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": ["apps/*/tsconfig.json", "libs/*/tsconfig.json"]
          },
          "node": {
            "extensions": [".mjs", ".js", ".json", ".ts", ".d.ts", ".jsx", ".tsx"]
          }
        }
      },
      "rules": {
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "destructuredArrayIgnorePattern": "^_",
            "ignoreRestSiblings": true,
            "caughtErrors": "none"
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "filter": {
              "regex": "^_id$",
              "match": true
            }
          }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
